/** fn functional lib v0.1  @namespace global  @author <a href="#">Ken</a>*/
!function(global,un){'use strict';var fn={};fn.copy=function(dest,sour){for(var i in sour){dest[i]=sour[i];}
return dest;}
fn.template=function(tmplStr,opt){var compilerName=opt&&opt.compiler?opt.compiler:fn.template.engine.options.compiler;var compiler=fn.template.engine.compiler[compilerName];if(!compiler)throw new Error('can not find compiler ['+compilerName+']');return compiler.compile(tmplStr,opt);}
fn.template.setting=function(opt){if(opt){fn.copy(fn.template.engine.options,opt);}}
fn.template.engine=new function(){this.options={startTag:'<#=',endTag:'#>',blockStartTag:'<#',blockEndTag:'#>',debug:false,varName:'data',compiler:'fnel'}
this.compiler={};var escapes=/([\$\(\)\[\]\{\}\*\+\.\?\\\^\|])/g;var varPx='-x-fn-tmpl-var-';var blockPx='-x-fn-tmpl-block-';function parseFields(tmpl,options){options.startTag=options.startTag.replace(escapes,'\\$1');options.endTag=options.endTag.replace(escapes,'\\$1');options.blockStartTag=options.blockStartTag.replace(escapes,'\\$1');options.blockEndTag=options.blockEndTag.replace(escapes,'\\$1');var varExp=new RegExp(options.startTag+'(.+?)'+options.endTag,'g');var blockExp=new RegExp(options.blockStartTag+'(.+?)'+options.blockEndTag,'g');tmpl=tmpl.replace(/[\r\t\n]+/gm,'');if(options.startTag.length>options.blockStartTag.length){return tmpl.replace(varExp,'\t'+varPx+'$1\t').replace(blockExp,'\t'+blockPx+'$1\t').split('\t');}else{return tmpl.replace(blockExp,'\t'+blockPx+'$1\t').replace(varExp,'\t'+varPx+'$1\t').split('\t');}}
function compileProxy(tmpl,options,opt,cbk){var compileStr='$comStr';var opts=arguments[1];if(opt){fn.copy(opts,opt);}
var fields=parseFields(tmpl,opts);var rs='var '+compileStr+'="",'+opts.varName+'=arguments[0];';var field;for(var i=0,l=fields.length;i<l;i++){field=fields[i];if(field.replace(/^\s|\s$/g,'').length<1)continue;if(field.indexOf(varPx)>-1){rs+=compileStr+"+=("+cbk(field.substring(varPx.length,field.length),2)+");";}else if(field.indexOf(blockPx)>-1){rs+=cbk(field.substring(blockPx.length,field.length),3);}else{rs+=compileStr+"+='"+cbk(field,1).replace(/'/g,"\\'")+"';";}}
return new Function(opts.varName,rs+'return '+compileStr);}
this.compiler['fnel']=function(options){function Scope(type,supr){this.type=type||'fn';this.suprScope=supr;}
var commands=['for','/for','if','/if','else'];this.currScope=new Scope();var THAT=this;return{compile:function(tmpl,opt){var tmpl=compileProxy(tmpl,options,opt,function(field,type){if(type===3){var parts=field.split(' ');var command=parts[0];var items;if(command==='for'){var isMatch=field.match(/items=['|"]([._$a-zA-Z0-9]+)['"]/);if(isMatch){command='forEach';items=RegExp.$1;}}
switch(command){case'for':return parseFor(field,THAT.currScope);break;case'/for':return parseEnd(field,'for',THAT.currScope);break;case'forEach':return parseForEach(items,field,THAT.currScope);break;case'if':return parseIf(field,THAT.currScope);break;case'else':return parseElse(field,THAT.currScope);break;case'/if':return parseEnd(field,'if',THAT.currScope);break;}}else{return field;}});if(THAT.currScope.type!=='fn'){throw new Error('Unclosed statements');}
return tmpl;}};function parseFor(field,currScope){THAT.currScope=new Scope('for',currScope);var varName,begin,end,step;field.match(/var="([_$a-zA-Z0-9]+)"/);varName=RegExp.$1;var parts=field.replace(/((?=var=['"])|(?=begin=['"])|(?=end=['"])|(?=step=['"]))/g,'\t$1').split('\t');for(var i=parts.length;i--;){var part=parts[i].replace(/^\s|\s$|/g,'');if(part.indexOf('begin')>-1){begin='('+part.substring(7,part.length-1)+')';}else if(part.indexOf('end')>-1){end='('+part.substring(5,part.length-1)+')';}else if(part.indexOf('step')>-1){step='('+part.substring(6,part.length-1)+')';}}
if(!end){throw new Error('Unclosed statements: '+field);}
begin=begin||0;step=step||1;return"for(var "+varName+"="+begin+";"+varName+"<="+end+";"+varName+"+="+step+"){";}
function parseForEach(items,field,currScope){THAT.currScope=new Scope('forEach',currScope);field.match(/var="([_$a-zA-Z0-9]+)"/);var varName=RegExp.$1;return items+".forEach(function("+varName+"){";}
function parseIf(field,currScope){THAT.currScope=new Scope('if',currScope);field.match(/test="(.+)"$/);var conditions=RegExp.$1;return"if("+conditions+"){";}
function parseElse(field,currScope){if(currScope.type.indexOf('if')<0){throw new Error('Error nested: '+field);}
var isMatch=field.match(/test="(.+)"$/);var conditions=RegExp.$1;return"}else"+(isMatch?" if("+conditions+")":"")+"{";}
function parseEnd(field,type,currScope){var rs;if(currScope.type.indexOf(type)<0){throw new Error('Error nested: '+field);}
switch(currScope.type){case'forEach':rs='});';break;case'for':rs='}';break;case'if':rs='}';break;}
THAT.currScope=currScope.suprScope;return rs;}}.call(this,this.options);this.compiler['rapid']=function(options){return{compile:function(tmpl,opt){return compileProxy(tmpl,options,opt,function(field,type){return field;});}};}.call(this,this.options);};if(!global.$)global.$=fn;global.fn=fn;}(self);